//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prvii.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PrviiEntities : DbContext
    {
        public PrviiEntities()
            : base("name=PrviiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ChannelMedia> ChannelMedias { get; set; }
        public virtual DbSet<ChannelMessageAttachment> ChannelMessageAttachments { get; set; }
        public virtual DbSet<ChannelSubscriber> ChannelSubscribers { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<GroupChannel> GroupChannels { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<UserProfile> UserProfiles { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<ShoppingCart> ShoppingCarts { get; set; }
        public virtual DbSet<ChannelMessage> ChannelMessages { get; set; }
        public virtual DbSet<ShoppingCartItem> ShoppingCartItems { get; set; }
        public virtual DbSet<PaymentRecon> PaymentRecons { get; set; }
        public virtual DbSet<ReconErrorLog> ReconErrorLogs { get; set; }
        public virtual DbSet<ChannelSubscriberMessage> ChannelSubscriberMessages { get; set; }
        public virtual DbSet<Channel> Channels { get; set; }
        public virtual DbSet<PrviiAccountMaster> PrviiAccountMasters { get; set; }
        public virtual DbSet<PrviiChannelAccounting> PrviiChannelAccountings { get; set; }
        public virtual DbSet<PrviiTransaction> PrviiTransactions { get; set; }
        public virtual DbSet<UserDeviceInfo> UserDeviceInfoes { get; set; }
        public virtual DbSet<IosTransactionLog> IosTransactionLogs { get; set; }
        public virtual DbSet<TransactionReconDetail> TransactionReconDetails { get; set; }
    
        public virtual ObjectResult<Nullable<long>> ProcGetSubscriberStatisticsActivity(Nullable<long> channelID, string reportType, string period, Nullable<long> periodValue)
        {
            var channelIDParameter = channelID.HasValue ?
                new ObjectParameter("ChannelID", channelID) :
                new ObjectParameter("ChannelID", typeof(long));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var periodValueParameter = periodValue.HasValue ?
                new ObjectParameter("PeriodValue", periodValue) :
                new ObjectParameter("PeriodValue", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("ProcGetSubscriberStatisticsActivity", channelIDParameter, reportTypeParameter, periodParameter, periodValueParameter);
        }
    
        public virtual int PROC_GetProfileIdsforRecon()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_GetProfileIdsforRecon");
        }
    
        public virtual ObjectResult<TransactionReconDetail> PROC_GetProfileIdsforRecon1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransactionReconDetail>("PROC_GetProfileIdsforRecon1");
        }
    
        public virtual ObjectResult<TransactionReconDetail> PROC_GetProfileIdsforRecon1(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransactionReconDetail>("PROC_GetProfileIdsforRecon1", mergeOption);
        }
    
        public virtual int ProcGetCelebrityRevenueReport(string channelID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var channelIDParameter = channelID != null ?
                new ObjectParameter("ChannelID", channelID) :
                new ObjectParameter("ChannelID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcGetCelebrityRevenueReport", channelIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int ProcGetCelebrityRevenueReport1(string channelID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var channelIDParameter = channelID != null ?
                new ObjectParameter("ChannelID", channelID) :
                new ObjectParameter("ChannelID", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProcGetCelebrityRevenueReport1", channelIDParameter, fromDateParameter, toDateParameter);
        }
    }
}
